# Bitnami PostgreSQL settings
architecture: standalone

auth:
  # Use existing secrets for passwords
  existingSecret: postgres-password
  secretKeys:
    adminPasswordKey: postgres-password
    replicationPasswordKey: replication-password

  # Default database and user
  database: postgres
  username: postgres

# Primary PostgreSQL configuration
primary:
  # Persistence settings
  persistence:
    enabled: true
    size: 10Gi
    storageClass: "" # Use default storage class

  # Init scripts to create n8n database and user
  initdb:
    scripts:
      00-init-n8n.sh: |
        #!/bin/bash
        set -e

        echo "Creating n8n database and user..."

        # Use environment variables for n8n credentials
        N8N_USER="${N8N_DB_USER}"
        N8N_DB="${N8N_DB_NAME}"
        N8N_PASSWORD="${N8N_DB_PASSWORD}"

        # Use POSTGRES_PASSWORD env var for authentication
        export PGPASSWORD="${POSTGRES_PASSWORD}"

        # Create n8n user and database using psql
        psql -v ON_ERROR_STOP=1 --username "postgres" --dbname "postgres" <<-EOSQL
          -- Create n8n user if it doesn't exist
          DO \$\$
          BEGIN
            IF NOT EXISTS (SELECT FROM pg_user WHERE usename = '${N8N_USER}') THEN
              CREATE USER ${N8N_USER} WITH PASSWORD '${N8N_PASSWORD}';
              RAISE NOTICE 'User ${N8N_USER} created';
            ELSE
              RAISE NOTICE 'User ${N8N_USER} already exists';
            END IF;
          END
          \$\$;
          
          -- Create n8n database if it doesn't exist
          SELECT 'CREATE DATABASE ${N8N_DB} OWNER ${N8N_USER}'
          WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '${N8N_DB}')\gexec
          
          -- Grant all privileges
          GRANT ALL PRIVILEGES ON DATABASE ${N8N_DB} TO ${N8N_USER};
        EOSQL

        echo "n8n database and user setup completed successfully!"  # Environment variables for init script
  extraEnvVars:
    - name: N8N_DB_USER
      valueFrom:
        secretKeyRef:
          name: postgres-n8n-credentials
          key: username
    - name: N8N_DB_NAME
      valueFrom:
        secretKeyRef:
          name: postgres-n8n-credentials
          key: database
    - name: N8N_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-n8n-credentials
          key: password

  # Resource limits
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Metrics for monitoring
metrics:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
