---
# SecretStore to access secrets from the redis namespace
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: redis-secret-store
  namespace: searxng
spec:
  provider:
    kubernetes:
      remoteNamespace: redis
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
      auth:
        serviceAccount:
          name: searxng-external-secrets-sa

---
# ServiceAccount for accessing secrets in redis namespace
apiVersion: v1
kind: ServiceAccount
metadata:
  name: searxng-external-secrets-sa
  namespace: searxng

---
# Role in redis namespace to read secrets
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.22.0/role.json
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: read-redis-secrets
  namespace: redis
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["redis-password"]
    verbs: ["get", "list", "watch"]

---
# RoleBinding to grant searxng ServiceAccount access to redis secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: searxng-read-redis-secrets
  namespace: redis
subjects:
  - kind: ServiceAccount
    name: searxng-external-secrets-sa
    namespace: searxng
roleRef:
  kind: Role
  name: read-redis-secrets
  apiGroup: rbac.authorization.k8s.io

---
# ExternalSecret to sync redis password into searxng namespace
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: searxng-redis
  namespace: searxng
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: redis-secret-store
    kind: SecretStore
  target:
    name: searxng-redis
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        redis_url: "redis://{{ .password }}@redis.redis.svc.cluster.local:6379/0"
  data:
    - secretKey: password
      remoteRef:
        key: redis-password
        property: password
