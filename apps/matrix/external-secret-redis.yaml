---
# SecretStore to access redis secret from redis namespace
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: redis-secret-store
  namespace: matrix
spec:
  provider:
    kubernetes:
      remoteNamespace: redis
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
      auth:
        serviceAccount:
          name: matrix-external-secrets-sa
---
# Role in redis namespace to read redis-password
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: read-redis-password
  namespace: redis
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["redis-password"]
    verbs: ["get", "list", "watch"]
---
# RoleBinding to allow matrix SA access to the secret in redis namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: matrix-read-redis-password
  namespace: redis
subjects:
  - kind: ServiceAccount
    name: matrix-external-secrets-sa
    namespace: matrix
roleRef:
  kind: Role
  name: read-redis-password
  apiGroup: rbac.authorization.k8s.io
---
# ExternalSecret: copy redis password into matrix namespace as `redis-password`
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-password
  namespace: matrix
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: redis-secret-store
    kind: SecretStore
  target:
    name: redis-password
    creationPolicy: Owner
    template:
      type: Opaque
  data:
    - secretKey: password
      remoteRef:
        key: redis-password
        property: password
