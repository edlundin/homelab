---
# SecretStore to access wildcard cert from traefik namespace
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: traefik-secret-store
  namespace: longhorn-system
spec:
  provider:
    kubernetes:
      remoteNamespace: traefik
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
      auth:
        serviceAccount:
          name: longhorn-external-secrets-sa
---
# ServiceAccount for ExternalSecrets access
apiVersion: v1
kind: ServiceAccount
metadata:
  name: longhorn-external-secrets-sa
  namespace: longhorn-system
---
# Role in traefik namespace to read wildcard secret
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: read-traefik-longhorn
  namespace: traefik
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["wildcard-tls-oisd"]
    verbs: ["get", "list", "watch"]
---
# RoleBinding to allow longhorn SA access to the secret in traefik namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: longhorn-read-traefik-tls-secrets
  namespace: traefik
subjects:
  - kind: ServiceAccount
    name: longhorn-external-secrets-sa
    namespace: longhorn-system
roleRef:
  kind: Role
  name: read-traefik-longhorn
  apiGroup: rbac.authorization.k8s.io
---
# ExternalSecret: copy TLS secret keys into longhorn-system namespace
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: wildcard-tls-oisd
  namespace: longhorn-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: traefik-secret-store
    kind: SecretStore
  target:
    name: wildcard-tls-oisd
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
  data:
    - secretKey: crt
      remoteRef:
        key: wildcard-tls-oisd
        property: tls.crt
    - secretKey: key
      remoteRef:
        key: wildcard-tls-oisd
        property: tls.key
