---
# SecretStore to access secrets from the postgres namespace
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: postgres-secret-store
  namespace: n8n
spec:
  provider:
    kubernetes:
      remoteNamespace: postgres
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
      auth:
        serviceAccount:
          name: n8n-postgres-external-secrets-sa

---
# ServiceAccount for accessing secrets in postgres namespace
apiVersion: v1
kind: ServiceAccount
metadata:
  name: n8n-postgres-external-secrets-sa
  namespace: n8n

---
# Role in postgres namespace to read secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: read-postgres-secrets-n8n
  namespace: postgres
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["postgres-n8n-credentials"]
    verbs: ["get", "list", "watch"]

---
# RoleBinding to grant n8n ServiceAccount access to postgres secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: n8n-read-postgres-secrets
  namespace: postgres
subjects:
  - kind: ServiceAccount
    name: n8n-postgres-external-secrets-sa
    namespace: n8n
roleRef:
  kind: Role
  name: read-postgres-secrets-n8n
  apiGroup: rbac.authorization.k8s.io

---
# ExternalSecret to sync postgres n8n credentials into n8n namespace
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: n8n-postgres
  namespace: n8n
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: postgres-secret-store
    kind: SecretStore
  target:
    name: n8n-postgres
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        database: "{{ .database }}"
        username: "{{ .username }}"
        password: "{{ .password }}"
        host: "postgres-postgresql.postgres.svc.cluster.local"
        port: "5432"
  data:
    - secretKey: database
      remoteRef:
        key: postgres-n8n-credentials
        property: database
    - secretKey: username
      remoteRef:
        key: postgres-n8n-credentials
        property: username
    - secretKey: password
      remoteRef:
        key: postgres-n8n-credentials
        property: password
