apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: n8n
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: n8n
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  sources:
    # Helm chart source
    - repoURL: oci://8gears.container-registry.com/library/n8n
      chart: n8n
      targetRevision: 1.0.15
      helm:
        values: |
          image:
            repository: n8nio/n8n
            pullPolicy: IfNotPresent
            tag: latest
          # Basic n8n configuration
          main:
            config:
              generic:
                timezone: "Europe/Paris"
              n8n:
                editor_base_url: "https://n8n.ison-mirfak.ts.net/"
              # Enable queue mode for webhooks and workers
              executions_mode: queue
              # Database configuration
              db:
                type: postgresdb
                postgresdb:
                  host: "postgres-postgresql.postgres.svc.cluster.local"
                  port: 5432
                  database: n8n
                  user: n8n
                  pool:
                    size: 10
              # Queue configuration with Redis
              queue:
                health:
                  check:
                    active: true
                bull:
                  redis:
                    host: "redis-master.redis.svc.cluster.local"
                    port: 6379
            
            # Environment variables for secrets
            extraEnv: &extraEnv
              # Override the Kubernetes-generated N8N_PORT env var to prevent conflicts
              N8N_PORT:
                value: "5678"
              WEBHOOK_URL:
                value: "https://n8n.ison-mirfak.ts.net/"
              N8N_PROXY_HOPS:
                value: "1"
              N8N_ENCRYPTION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: n8n-encryption-key
                    key: encryption_key
              DB_POSTGRESDB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: n8n-postgres
                    key: password
              QUEUE_BULL_REDIS_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: n8n-redis
                    key: password
              N8N_PAYLOAD_SIZE_MAX:
                value: "16"
            
            # Persistence - disabled since we're using PostgreSQL
            # All workflow data is stored in the database
            persistence:
              enabled: false
            
            # Resource limits
            resources:
              limits:
                cpu: 1000m
                memory: 1024Mi
              requests:
                cpu: 100m
                memory: 512Mi
            
            # Service configuration
            service:
              type: ClusterIP
              port: 80

          # Disable chart's ingress - we'll create our own
          ingress:
            enabled: false

          # Enable workers for queue processing
          worker:
            enabled: true
            replicaCount: 1
            extraEnv: *extraEnv  # Reuse environment variables from main
            resources:
              limits:
                cpu: 1000m
                memory: 1024Mi
              requests:
                cpu: 100m
                memory: 512Mi

          # Enable webhook service
          webhook:
            enabled: true
            replicaCount: 1
            extraEnv: *extraEnv  # Reuse environment variables from main
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 50m
                memory: 256Mi

    # Git source for manifests (sealed secret + ingress)
    - repoURL: https://github.com/edlundin/homelab.git
      targetRevision: master
      path: apps/n8n
      directory:
        include: "{n8n-secrets-sealed.yaml,ingress.yaml,external-secret-*.yaml,tailscale-funnel-ingress.yaml}"
