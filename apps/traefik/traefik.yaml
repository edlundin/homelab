---
# Create a namespace for Traefik
apiVersion: v1
kind: Namespace
metadata:
  name: traefik

---
# Service account for Traefik
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: traefik

---
# ClusterRole for Traefik to access Kubernetes resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.io
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - middlewares
      - middlewaretcps
      - tlsoptions
      - tlsstores
      - traefikservices
      - serverstransports
    verbs:
      - get
      - list
      - watch

---
# Bind the ClusterRole to the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
  - kind: ServiceAccount
    name: traefik
    namespace: traefik

---
# ConfigMap for Traefik static configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: traefik
data:
  traefik.yml: |
    # Static configuration
    global:
      checkNewVersion: false
      sendAnonymousUsage: false

    # Entry points
    entryPoints:
      web:
        address: ":80"
        http:
          redirections:
            entrypoint:
              to: websecure
              scheme: https
              permanent: true
      websecure:
        address: ":443"

    # Providers
    providers:
      kubernetesIngress:
        publishedService:
          enabled: true
      kubernetesCRD:
        allowCrossNamespace: true

    # Certificate management delegated to cert-manager

    # API and dashboard
    api:
      dashboard: true
      insecure: false

    # Metrics
    metrics:
      prometheus:
        buckets:
          - 0.1
          - 0.3
          - 1.2
          - 5.0

    # Logs
    log:
      level: INFO

    accessLog: {}

---
# Traefik deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik
      containers:
        - name: traefik
          image: traefik:v3.5
          args:
            - --configfile=/config/traefik.yml
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
            - name: config
              mountPath: /config
          livenessProbe:
            httpGet:
              path: /ping
              port: admin
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: admin
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: config
          configMap:
            name: traefik-config

---
# Service for Traefik (LoadBalancer to expose HTTP/HTTPS)
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: traefik
  labels:
    app: traefik
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
    - name: web
      port: 80
      targetPort: 80
      protocol: TCP
    - name: websecure
      port: 443
      targetPort: 443
      protocol: TCP

---
# Service for Traefik dashboard (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard
  namespace: traefik
  labels:
    app: traefik
spec:
  type: ClusterIP
  selector:
    app: traefik
  ports:
    - name: admin
      port: 8080
      targetPort: 8080
      protocol: TCP

---
# IngressClass for Traefik
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: traefik
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: traefik.io/ingress-controller

---
# Ingress for Traefik dashboard with wildcard certificate
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-dashboard
  namespace: traefik
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: traefik-basic-auth@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: proxy.oisd.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: traefik-dashboard
                port:
                  number: 8080
  tls:
    - hosts:
        - "*.oisd.io"
      secretName: wildcard-tls-oisd
    - hosts:
        - "*.bos.oisd.io"
      secretName: wildcard-tls-bos-oisd
    - hosts:
        - "*.s3.oisd.io"
      secretName: wildcard-tls-s3-oisd
