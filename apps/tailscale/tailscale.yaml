---
# Create a namespace for Tailscale
apiVersion: v1
kind: Namespace
metadata:
  name: tailscale

---
# Service account for Tailscale to access Kubernetes API
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale
  namespace: tailscale

---
# Give Tailscale permission to store its state in secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale
  namespace: tailscale
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "update", "list", "delete"]

---
# Bind the role to the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale
  namespace: tailscale
subjects:
  - kind: ServiceAccount
    name: tailscale
roleRef:
  kind: Role
  name: tailscale
  apiGroup: rbac.authorization.k8s.io

---
# Persistent storage for Tailscale state
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tailscale-state
  namespace: tailscale
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi # Small amount is enough
  storageClassName: local-path # k3s default storage class

---
# The Tailscale deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale
  namespace: tailscale
spec:
  replicas: 1 # Only need one
  selector:
    matchLabels:
      app: tailscale
  template:
    metadata:
      labels:
        app: tailscale
    spec:
      serviceAccountName: tailscale
      containers:
        - name: tailscale
          image: tailscale/tailscale:latest
          imagePullPolicy: Always
          env:
            # Auth key from secret
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-auth
                  key: AUTH_KEY
            # Run in userspace mode (no kernel module needed)
            - name: TS_USERSPACE
              value: "true"
            # Where to store Tailscale state
            - name: TS_STATE_DIR
              value: /var/lib/tailscale
            # Hostname that will appear in Tailscale admin
            - name: TS_HOSTNAME
              value: k3s-cluster
            # Accept routes (allows you to reach services in cluster)
            - name: TS_EXTRA_ARGS
              value: "--accept-routes"
            # Enable subnet routes to expose cluster network
            - name: TS_ROUTES
              value: "10.42.0.0/16,10.43.0.0/16" # k3s pod and service networks
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
          volumeMounts:
            - name: tailscale-state
              mountPath: /var/lib/tailscale
            - name: dev-net-tun
              mountPath: /dev/net/tun
      volumes:
        - name: tailscale-state
          persistentVolumeClaim:
            claimName: tailscale-state
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
            type: CharDevice
